#!/bin/bash

##########    Make Slideshow Wallpaper   by Freedman   ##########

_OutputFile=background.xml
_StaticTime=595.0
_TransitionTime=5.0
_FileType="gif|jpg|png|bmp"
# _SortFiles=Alphabetic
_SortFiles=Random
_Depth=30 # at most levels of directories been include
# The line under here helps to setup the wallpaper automaticlly,
# comment it with octothorpe if you want do that yourself.
_Autoset=on ; _AutosetPath=$HOME/.config
_StartNow=on


function find_image_files() {
  BOARD_ImgFils=$(
                  find -L $PWD \
                       -maxdepth $_Depth \
                       -regextype posix-extended \
                       -iregex \
                       ".*\.($_FileType)" \
                    2> /dev/null
                 )

  if  [ "$_SortFiles" == "Random" ] ; then
    BOARD_ImgFils=$( echo -e "$BOARD_ImgFils" | sort -R )
  elif  [ "$_SortFiles" == "Alphabetic" ] ; then
    BOARD_ImgFils=$( echo -e "$BOARD_ImgFils" | sort )
  fi
}


function error_exit_if_too_less_image_file() {
  local FilTotl=$( echo -e "$BOARD_ImgFils" \
                  | wc -l \
                  | cut -d " " -f1
                )

  if [ $FilTotl -lt 2 ] ; then
    /usr/bin/zenity --warning \
                    --title='Error!' \
                    --text='Need two image files at least!' \
          > /dev/null 2>&1
    echo -e '\nError!\nNeed two image files at least!\n'
    exit 1
  fi
}


function generate_slide_show_xml() {
  eval $( date +"
          local Yer=%Y
                Mnth=%m
                Day=%d
                Hour=%H
                Minute=%M
                Second=%S
         ")
  local Head="  <static>\n    <duration>$_StaticTime</duration>\n    <file>"
  local Tail="</file>\n  </static>"
  local FrmHead="  <transition>\n    <duration>$_TransitionTime</duration>\n    <from>"
  local FrmTail="</from>"
  local ToHead="    <to>"
  local ToTail="</to>\n  </transition>"
  local FstFil

  if [ "$_StartNow" != "on" ] ; then Hour=00 Minute=00 Second=00 ; fi

  echo "<background>"
  echo "  <starttime>"
  echo "    <year>$Yer</year>"
  echo "    <month>$Mnth</month>"
  echo "    <day>$Day</day>"
  echo "    <hour>$Hour</hour>"
  echo "    <minute>$Minute</minute>"
  echo "    <second>$Second</second>"
  echo "  </starttime>"
  echo "<!-- This animation starts at $Yer/$Mnth/$Day $Hour:$Minute:$Second. -->"

  if [ "$_TransitionTime" == "0" ] ; then
    echo -e "$BOARD_ImgFils" | sed "s|^\(.*\)$|$Head\0$Tail|"
  else
    FstFil=$( echo -e "$BOARD_ImgFils" | head -n 1 )
    echo -e "${Head}${FstFil}${Tail}"
    echo -e "${FrmHead}${FstFil}${FrmTail}"
    echo -e "$BOARD_ImgFils" \
     | tail -n +2 \
     | sed "s|^\(.*\)$|$ToHead\0$ToTail\n$Head\0$Tail\n$FrmHead\0$FrmTail|"
    echo -e "${ToHead}${FstFil}${ToTail}"
  fi

  echo "</background>"
}


function distribution_n_release() {
  local distri reles

  distri="$(lsb_release -i)"
  distri="$(echo $distri)"
  distri="${distri##* } "

  reles="$(lsb_release -r)"
  reles="$(echo $reles)"
  reles="${reles##* }"

  echo $distri $reles
}


function move_output_file() {

  if [ -z "$_AutosetPath" ] ; then
    _AutosetPath="$PWD"
  else
    mkdir -p "$_AutosetPath"
    mv -f "$_OutputFile" "$_AutosetPath/$_OutputFile"
  fi
}


function set_background() {
  local x distro

  distro="$( distribution_n_release )"

  case "$distro" in
    "Ubuntu 15.04")
      case "$DESKTOP_SESSION" in
        ubuntu|gnome*)
          move_output_file
          gsettings set org.gnome.desktop.background picture-uri \
                          "file://$_AutosetPath/$_OutputFile"
          return 0
          ;;
        cinnamon*)
          move_output_file
          gsettings set org.cinnamon.desktop.background picture-uri \
                          "file://$_AutosetPath/$_OutputFile"
          return 0
          ;;
        mate)
          move_output_file
          gsettings set org.mate.background picture-filename \
                          "$_AutosetPath/$_OutputFile"
          return 0
          ;;
      esac
      ;;
  esac

  move_output_file

  x=$(gnome-session --version)
  x=${x#* }
  if [ "${x%%.*}" == "3" ] ; then
    gsettings set org.gnome.desktop.background picture-uri "file://$_AutosetPath/$_OutputFile"
  elif [ "${x%%.*}" == "2" ] ; then
    gconftool --set --type=string /desktop/gnome/background/picture_filename "$_AutosetPath/$_OutputFile"
  fi
}


function main() {

  find_image_files

  error_exit_if_too_less_image_file

  generate_slide_show_xml > "$_OutputFile"

  if [ "$_Autoset" == "on" ] ; then set_background ; fi

}


main
